{"version":3,"sources":["../src/piechart_ctrl.js"],"names":[],"mappings":"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","file":"piechart_ctrl.js","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport kbn from 'app/core/utils/kbn';\nimport TimeSeries from 'app/core/time_series';\nimport rendering from './rendering';\nimport legend from './legend';\nimport geohash from './geohash'\n\nexport class PieChartCtrl extends MetricsPanelCtrl {\n\n  constructor($scope, $injector, $rootScope) {\n    super($scope, $injector);\n    this.$rootScope = $rootScope;\n\n    var panelDefaults = {\n      legend: {\n        show: true, // disable/enable legend\n      },\n      links: [],\n      datasource: null,\n      maxDataPoints: 3,\n      interval: null,\n      targets: [{}],\n      cacheTimeout: null,\n      nullPointMode: 'connected',\n      legendType: 'Под картой',\n      aliasColors: {},\n      fontSize: '80%',\n      satTag: \"sat\",\n      trace: true\n    };\n\n    _.defaults(this.panel, panelDefaults);\n    _.defaults(this.panel.legend, panelDefaults.legend);\n\n    this.events.on('render', this.onRender.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Options', 'public/plugins/satmap-panel/editor.html', 2);\n    this.unitFormats = kbn.getUnitFormats();\n  }\n\n  setUnitFormat(subItem) {\n    this.panel.format = subItem.value;\n    this.render();\n  }\n\n  onDataError() {\n    this.series = [];\n    this.render();\n  }\n\n  changeSeriesColor(series, color) {\n    series.color = color;\n    this.panel.aliasColors[series.alias] = series.color;\n    this.render();\n  }\n\n  onRender() {\n    this.data = this.parseSeries(this.series);\n  }\n\n  parseSeries(series) {\n    return _.map(this.series, (serie, i) => {\n      return {\n        label: serie.alias,\n        sat: serie.sat,\n        data: _(serie.datapoints).map(point => point[0]).value(),\n        color: this.panel.aliasColors[serie.alias] || this.$rootScope.colors[i]\n      };\n    });\n  }\n\n  onDataReceived(dataList) {\n    var satRe = new RegExp(this.panel.satTag + \"=(\\\\w+)\");\n\n    this.series = _.chain(dataList.map(this.seriesHandler.bind(this)))\n      .groupBy(data => _.last(data.alias.match(satRe))).map((group, sat) => {\n          _.first(group).datapoints.forEach(point => {\n            var coord = geohash.decode_int(point[0]);\n            point[0] = L.latLng(coord.latitude, coord.longitude);\n\n            if (group.length > 1) {\n              var delta = group[1].stats.timeStep / 2;\n              var value = _.find(group[1].datapoints, d => (d[1] >= point[1] - delta) && (d[1] <= point[1] + delta));\n              if (value !== undefined) point[0].value = value[0];\n            }\n          });\n        \n        group[0].sat = sat;\n        return group[0];\n      })\n      .value()\n\n\n    this.data = this.parseSeries(this.series);\n    this.render(this.data);\n  }\n\n  seriesHandler(seriesData) {\n    var series = new TimeSeries({\n      datapoints: seriesData.datapoints,\n      alias: seriesData.target\n    });\n\n    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\n    return series;\n  }\n\n  formatValue(value) {\n    return value;\n  }\n  \n  toggleSeries(seriesInfo, e) {\n    var map = this.map;\n    \n    this.markers.eachLayer(function (marker) {\n      if (_.get(marker, 'options.sat') == seriesInfo.sat) {\n        map.setView(marker.getLatLng());\n        marker.openPopup();\n        return;\n      }\n    });\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    rendering(scope, elem, attrs, ctrl);\n  }\n}\n\nPieChartCtrl.templateUrl = 'module.html';\n"]}