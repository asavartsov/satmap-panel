{"version":3,"sources":["../src/polar_map.js"],"names":["circulus","_","PolarMap","canvas","options","size","Math","min","width","height","maxDistance","drawWidth","polar","context","deg","PI","rad","point","φ1","degToRad","center","lat","φ2","λ1","lng","λ2","Δλ","R","distance","acos","sin","cos","y","x","bearing","atan2","angle","d","hex","bw","indexOf","slice","length","Error","r","parseInt","g","b","toString","padZero","fillStyle","strokeStyle","i","ccw90","beginPath","moveTo","lineTo","stroke","fillTextCentered","arc","round","dToPx","value","thresholds","colors","isFinite","system","prn","color","small","drawLabels","fillRectCentered","a","fill","invertColor","track","data","forEach","sat","match","head","tail","last","prev","drawTracks","colorizeTracks","getColor","timestamp","timeStep","drawTrackEnd","tracks","map","getPosition","p","chain","flatMap","filter","orderBy","get","clearCanvas","lineWidth","drawGrid","drawTrack"],"mappings":"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","file":"polar_map.js","sourcesContent":["import circulus from './circulus'\r\nimport _ from 'lodash'\r\n\r\nexport default class PolarMap {\r\n    constructor(canvas, options) {\r\n        var size = Math.min(canvas.width, canvas.height);\r\n        canvas.width = canvas.height = size;\r\n\r\n        this.canvas = canvas;\r\n        this.options = options;\r\n        this.maxDistance = 0;\r\n        this.drawWidth = this.canvas.width - 60;\r\n        this.polar = circulus(canvas, true);\r\n        this.context = this.polar.context;\r\n    }\r\n\r\n    degToRad(deg) {\r\n        return deg * (Math.PI/180)\r\n    }\r\n\r\n    radToDeg(rad) {\r\n        return rad * (180/Math.PI);\r\n    }\r\n\r\n    getPosition(point) {\r\n        var φ1 = this.degToRad(this.options.center.lat);\r\n        var φ2 = this.degToRad(point.lat);\r\n\r\n        var λ1 = this.degToRad(this.options.center.lng);\r\n        var λ2 = this.degToRad(point.lng);\r\n\r\n        var Δλ = λ2 - λ1, R = 6371e3; // gives d in metres\r\n        var distance = Math.acos(Math.sin(φ1) * Math.sin(φ2) + Math.cos(φ1) * Math.cos(φ2) * Math.cos(Δλ)) * R;\r\n\r\n        var y = Math.sin(Δλ) * Math.cos(φ2);\r\n        var x = Math.cos(φ1) * Math.sin(φ2) - Math.sin(φ1) * Math.cos(φ2) * Math.cos(Δλ);\r\n        var bearing = Math.atan2(y, x);\r\n\r\n        point.bearing = bearing;\r\n        point.distance = distance;\r\n\r\n        return point;\r\n    }\r\n\r\n    ccw90(angle) {\r\n        return angle - Math.PI/2;\r\n    }\r\n\r\n    dToPx(d) {\r\n        return (d * this.drawWidth/2) / this.maxDistance;\r\n    }\r\n\r\n    invertColor(hex, bw) {\r\n        if (hex.indexOf('#') === 0) {\r\n            hex = hex.slice(1);\r\n        }\r\n\r\n        if (hex.length === 3) {\r\n            hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\r\n        }\r\n\r\n        if (hex.length !== 6) {\r\n            throw new Error('Invalid HEX color.');\r\n        }\r\n\r\n        var r = parseInt(hex.slice(0, 2), 16),\r\n            g = parseInt(hex.slice(2, 4), 16),\r\n            b = parseInt(hex.slice(4, 6), 16);\r\n        if (bw) {\r\n            return (r * 0.299 + g * 0.587 + b * 0.114) > 186 ? '#000000' : '#FFFFFF';\r\n        }\r\n\r\n        r = (255 - r).toString(16);\r\n        g = (255 - g).toString(16);\r\n        b = (255 - b).toString(16);\r\n\r\n        return \"#\" + padZero(r) + padZero(g) + padZero(b);\r\n    }\r\n\r\n    drawGrid() {\r\n        this.context.fillStyle = \"#444\";\r\n        this.context.strokeStyle = \"#444\";\r\n\r\n        for (var i = 0; i < 360; i += 30) {\r\n            var angle = this.ccw90(this.degToRad(i));\r\n\r\n            this.polar.beginPath();\r\n            this.polar.moveTo(0, 0);\r\n            this.polar.lineTo(angle, this.drawWidth/2);\r\n            this.polar.stroke();\r\n\r\n            this.polar.fillTextCentered(i + \"°\", angle, this.drawWidth/2 + 10, 5);\r\n        }\r\n\r\n        this.polar.beginPath();\r\n        this.polar.arc(0, 0, this.drawWidth/4, 0, Math.PI*2); // 1/2 of grid\r\n        this.polar.arc(0, 0, this.drawWidth/2, 0, Math.PI*2); // 1 of grid\r\n        this.polar.stroke();\r\n\r\n        this.polar.fillTextCentered(Math.round(this.maxDistance/2000) + \" км\", Math.PI, this.dToPx(this.maxDistance/2), 10);\r\n        this.polar.fillTextCentered(Math.round(this.maxDistance/2000) + \" км\", 0, this.dToPx(this.maxDistance/2), 10);\r\n    }\r\n\r\n    getColor(value) {\r\n        var thresholds = this.options.thresholds,\r\n            colors = this.options.colors;\r\n\r\n        if (!_.isFinite(value)) {\r\n            return colors[0];\r\n        }\r\n\r\n        for (var i = 0; i < thresholds.length; i++) {\r\n            if (value < thresholds[i]) {\r\n                return colors[i];\r\n            }\r\n        }\r\n\r\n        return colors[thresholds.length];\r\n    }\r\n\r\n    drawTrackEnd(point, system, prn, color, small) {\r\n        var size = small ? 10 : (this.options.drawLabels ? 16 : 14);\r\n        this.context.fillStyle = color;\r\n\r\n        if (system === 'GLONASS') {\r\n            this.polar.fillRectCentered(point.a, point.r, size, size);\r\n        }\r\n        else {\r\n            this.polar.beginPath();\r\n            this.polar.arc(point.a, point.r, size/2, 0, Math.PI*2)\r\n            this.polar.fill();\r\n        }\r\n\r\n        if (this.options.drawLabels && !small) {\r\n            this.context.fillStyle = this.invertColor(color, true);\r\n            this.polar.fillTextCentered(prn, point.a, point.r, 3);\r\n        }\r\n    }\r\n\r\n    drawTrack(track) {\r\n        if (track.data.length < 1) return;\r\n\r\n        this.context.strokeStyle = track.color;\r\n\r\n        _.forEach(track.data, point => {\r\n            point.a = this.ccw90(point.bearing);\r\n            point.r = this.dToPx(point.distance);\r\n        });\r\n\r\n        var system = track.sat.match(/([A-Z]+)/)[1] || '';\r\n        var prn = track.sat.match(/(\\d+)/)[1] || '';\r\n\r\n        var head = _.head(track.data),\r\n            tail = _.last(track.data),\r\n            prev = head;\r\n\r\n        if (track.data.length > 1 && this.options.drawTracks) {\r\n            this.polar.beginPath();\r\n            this.polar.moveTo(head.a, head.r);\r\n\r\n            if (this.options.colorizeTracks) {\r\n                for (var i = 1; i < track.data.length; i++) {\r\n                    this.context.strokeStyle = this.getColor(track.data[i].value);\r\n\r\n                    if (track.data[i].timestamp - prev.timestamp < track.timeStep * 20) {\r\n                        this.polar.lineTo(track.data[i].a, track.data[i].r);\r\n                        this.polar.stroke();\r\n                    }\r\n                    else {\r\n                        this.drawTrackEnd(prev, system, prn, track.color, true);\r\n                    }\r\n\r\n                    prev = track.data[i];\r\n                    this.polar.beginPath();\r\n                    this.polar.moveTo(track.data[i].a, track.data[i].r);\r\n                }\r\n            }\r\n            else {\r\n                for (var i = 1; i < track.data.length; i++) {\r\n                    if (track.data[i].timestamp - prev.timestamp < track.timeStep * 20) {\r\n                        this.polar.lineTo(track.data[i].a, track.data[i].r);\r\n                    }\r\n                    else {\r\n                        this.polar.stroke();\r\n                        this.drawTrackEnd(prev, system, prn, track.color, true);\r\n                        this.polar.beginPath();\r\n                        this.polar.moveTo(track.data[i].a, track.data[i].r);\r\n                    }\r\n\r\n                    prev = track.data[i];\r\n                }\r\n\r\n                this.polar.stroke();\r\n            }\r\n        }\r\n\r\n        this.drawTrackEnd(tail, system, prn, track.color);\r\n    }\r\n\r\n    draw(tracks) {\r\n        _.forEach(tracks, track => track.data = track.data.map(p => this.getPosition(p)));\r\n\r\n        this.maxDistance = _.chain(tracks)\r\n            .flatMap('data')\r\n            .filter(p => p.distance < 7e6)\r\n            .orderBy('distance', 'desc')\r\n            .head()\r\n            .get('distance')\r\n            .value() || 100e3;\r\n\r\n        this.maxDistance += this.maxDistance * 0.1; // Добавить 10% для отступа\r\n        this.polar.clearCanvas();\r\n\r\n        this.context.lineWidth = 1;\r\n        this.drawGrid();\r\n\r\n        this.context.lineWidth = 3;\r\n        tracks.forEach(track => this.drawTrack(track));\r\n    }\r\n}"]}