{"version":3,"sources":["../src/satmap_ctrl.js"],"names":["MetricsPanelCtrl","_","kbn","core","TimeSeries","rendering","legend","arrayList","geohash","SatMapCtrl","$scope","$injector","$rootScope","panelDefaults","show","links","datasource","maxDataPoints","interval","targets","cacheTimeout","nullPointMode","legendOnMap","aliasColors","fontSize","satTag","trace","thresholds","colors","polar","polarCenter","lat","lng","colorize","defaults","panel","events","on","onRender","bind","onDataReceived","onDataError","onInitEditMode","appEvents","dashboard","sharedTooltipModeEnabled","evt","id","otherPanelInFullscreenMode","hovers","clearLayers","forEach","nearestPoints","pos","x","marker","L","circleMarker","p","radius","color","fillOpacity","addTo","event","info","addEditorTab","unitFormats","getUnitFormats","subItem","format","value","render","series","alias","time","_binSearch","idx","mindiff","data","length","diff","Math","abs","timestamp","map","filter","parseSeries","serie","i","label","sat","flotpairs","point","timeStep","stats","dataList","satRe","RegExp","chain","seriesHandler","groupBy","last","match","group","first","coord","decode_int","latLng","latitude","longitude","delta","find","d","undefined","seriesData","datapoints","target","getFlotPairs","seriesInfo","e","markers","eachLayer","get","setView","getLatLng","openPopup","scope","elem","attrs","ctrl","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAQA,sB,kBAAAA,gB;;AAEDC,O;;AACAC,S;;AACAC,U;;AACAC,gB;;AACAC,e;;AACAC,Y;;AACAC,e;;AACAC,a;;;;;;;;;;;;;;;;;;;;;4BAEMC,U;;;AAEX,4BAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,UAA/B,EAA2C;AAAA;;AAAA,8HACnCF,MADmC,EAC3BC,SAD2B;;AAEzC,gBAAKC,UAAL,GAAkBA,UAAlB;;AAEA,cAAIC,gBAAgB;AAClBP,oBAAQ;AACNQ,oBAAM,IADA,CACM;AADN,aADU;AAIlBC,mBAAO,EAJW;AAKlBC,wBAAY,IALM;AAMlBC,2BAAe,CANG;AAOlBC,sBAAU,IAPQ;AAQlBC,qBAAS,CAAC,EAAD,CARS;AASlBC,0BAAc,IATI;AAUlBC,2BAAe,WAVG;AAWlBC,yBAAa,IAXK;AAYlBC,yBAAa,EAZK;AAalBC,sBAAU,KAbQ;AAclBC,oBAAQ,KAdU;AAelBC,mBAAO,IAfW;AAgBlBC,wBAAY,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAhBM;AAiBlBC,oBAAQ,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,CAjBU;AAkBlBC,mBAAO,KAlBW;AAmBlBC,yBAAa,EAACC,KAAK,SAAN,EAAiBC,KAAK,SAAtB,EAnBK;AAoBlBC,sBAAU;AApBQ,WAApB;;AAuBAhC,YAAEiC,QAAF,CAAW,MAAKC,KAAhB,EAAuBtB,aAAvB;AACAZ,YAAEiC,QAAF,CAAW,MAAKC,KAAL,CAAW7B,MAAtB,EAA8BO,cAAcP,MAA5C;;AAEA,gBAAK8B,MAAL,CAAYC,EAAZ,CAAe,QAAf,EAAyB,MAAKC,QAAL,CAAcC,IAAd,OAAzB;AACA,gBAAKH,MAAL,CAAYC,EAAZ,CAAe,eAAf,EAAgC,MAAKG,cAAL,CAAoBD,IAApB,OAAhC;AACA,gBAAKH,MAAL,CAAYC,EAAZ,CAAe,YAAf,EAA6B,MAAKI,WAAL,CAAiBF,IAAjB,OAA7B;AACA,gBAAKH,MAAL,CAAYC,EAAZ,CAAe,oBAAf,EAAqC,MAAKG,cAAL,CAAoBD,IAApB,OAArC;AACA,gBAAKH,MAAL,CAAYC,EAAZ,CAAe,gBAAf,EAAiC,MAAKK,cAAL,CAAoBH,IAApB,OAAjC;;AAEApC,eAAKwC,SAAL,CAAeN,EAAf,CAAkB,aAAlB,EAAiC,eAAO;AACpC;AACA,gBAAI,CAAC,MAAKO,SAAL,CAAeC,wBAAf,EAAL,EAAgD;AAC9C;AACD;;AAED;AACA,gBAAIC,IAAIX,KAAJ,CAAUY,EAAV,KAAiB,MAAKZ,KAAL,CAAWY,EAA5B,IAAkC,MAAKC,0BAAL,EAAlC,IAAuE,CAAC,MAAKC,MAAjF,EAAyF;AACvF;AACD;;AAED,kBAAKA,MAAL,CAAYC,WAAZ;AACAjD,cAAEkD,OAAF,CAAU,MAAKC,aAAL,CAAmBN,IAAIO,GAAJ,CAAQC,CAA3B,CAAV,EAAyC,aAAK;AAC5C,kBAAIC,SAASC,EAAEC,YAAF,CAAeC,CAAf,EAAkB;AAC7BC,wBAAQ,CADqB;AAE7BC,uBAAO,MAFsB;AAG7BC,6BAAa;AAHgB,eAAlB,CAAb;;AAMAN,qBAAOO,KAAP,CAAa,MAAKb,MAAlB;AACD,aARD;AASD,WArBH;;AAwBA9C,eAAKwC,SAAL,CAAeN,EAAf,CAAkB,mBAAlB,EAAuC,UAAC0B,KAAD,EAAQC,IAAR,EAAiB;AACpD,gBAAI,MAAKf,MAAT,EAAiB;AACf,oBAAKA,MAAL,CAAYC,WAAZ;AACD;AACF,WAJH;AA5DyC;AAkE1C;;;;2CAEgB;AACf,iBAAKe,YAAL,CAAkB,SAAlB,EAA6B,yCAA7B,EAAwE,CAAxE;AACA,iBAAKC,WAAL,GAAmBhE,IAAIiE,cAAJ,EAAnB;AACD;;;wCAEaC,O,EAAS;AACrB,iBAAKjC,KAAL,CAAWkC,MAAX,GAAoBD,QAAQE,KAA5B;AACA,iBAAKC,MAAL;AACD;;;wCAEa;AACZ,iBAAKC,MAAL,GAAc,EAAd;AACA,iBAAKD,MAAL;AACD;;;4CAEiBC,M,EAAQZ,K,EAAO;AAC/BY,mBAAOZ,KAAP,GAAeA,KAAf;AACA,iBAAKzB,KAAL,CAAWZ,WAAX,CAAuBiD,OAAOC,KAA9B,IAAuCD,OAAOZ,KAA9C;AACA,iBAAKW,MAAL;AACD;;;wCAEaG,I,EAAM;AAClB,gBAAIC,aAAa,SAAbA,UAAa,CAACH,MAAD,EAAY;AAC3B,kBAAII,GAAJ;AAAA,kBAASC,UAAU,IAAnB;;AAEA,mBAAKD,MAAM,CAAX,EAAcA,MAAMJ,OAAOM,IAAP,CAAYC,MAAhC,EAAwCH,KAAxC,EAA+C;AAC3C,oBAAII,OAAOC,KAAKC,GAAL,CAASV,OAAOM,IAAP,CAAYF,GAAZ,EAAiBO,SAAjB,GAA6BT,IAAtC,CAAX;;AAEA,oBAAIG,YAAY,IAAZ,IAAoBG,OAAOH,OAA/B,EAAwC;AACpCA,4BAAUG,IAAV;AACH,iBAFD,MAEO;AACH;AACH;AACJ;;AAED,qBAAOR,OAAOM,IAAP,CAAYF,GAAZ,CAAP;AACD,aAdD;;AAgBA,mBAAO3E,EAAE,KAAK6E,IAAP,EAAaM,GAAb,CAAiBT,UAAjB,EAA6BU,MAA7B,GAAsCf,KAAtC,EAAP;AACH;;;qCAEY;AACT,iBAAKQ,IAAL,GAAY,KAAKQ,WAAL,CAAiB,KAAKd,MAAtB,CAAZ;AACD;;;sCAEWA,M,EAAQ;AAAA;;AAClB,mBAAOvE,EAAEmF,GAAF,CAAM,KAAKZ,MAAX,EAAmB,UAACe,KAAD,EAAQC,CAAR,EAAc;AACtC,qBAAO;AACLC,uBAAOF,MAAMd,KADR;AAELiB,qBAAKH,MAAMG,GAFN;AAGLZ,sBAAM7E,EAAEsF,MAAMI,SAAR,EAAmBP,GAAnB,CAAuB;AAAA,yBAASQ,MAAM,CAAN,CAAT;AAAA,iBAAvB,EAA0CtB,KAA1C,EAHD;AAILV,uBAAO,OAAKzB,KAAL,CAAWZ,WAAX,CAAuBgE,MAAMd,KAA7B,KAAuC,OAAK7D,UAAL,CAAgBgB,MAAhB,CAAuB4D,CAAvB,CAJzC;AAKLK,0BAAUN,MAAMO,KAAN,CAAYD,QAAZ,IAAwB;AAL7B,eAAP;AAOD,aARM,CAAP;AASD;;;yCAEcE,Q,EAAU;AACvB,gBAAIC,QAAQ,IAAIC,MAAJ,CAAW,KAAK9D,KAAL,CAAWV,MAAX,GAAoB,SAA/B,CAAZ;;AAEA,iBAAK+C,MAAL,GAAcvE,EAAEiG,KAAF,CAAQH,SAASX,GAAT,CAAa,KAAKe,aAAL,CAAmB5D,IAAnB,CAAwB,IAAxB,CAAb,CAAR,EACX6D,OADW,CACH;AAAA,qBAAQnG,EAAEoG,IAAF,CAAOvB,KAAKL,KAAL,CAAW6B,KAAX,CAAiBN,KAAjB,CAAP,CAAR;AAAA,aADG,EACsCZ,GADtC,CAC0C,UAACmB,KAAD,EAAQb,GAAR,EAAgB;AAClEzF,gBAAEuG,KAAF,CAAQD,KAAR,EAAeZ,SAAf,CAAyBxC,OAAzB,CAAiC,iBAAS;AACxC,oBAAIsD,QAAQjG,QAAQkG,UAAR,CAAmBd,MAAM,CAAN,CAAnB,CAAZ;AACAA,sBAAM,CAAN,IAAWpC,EAAEmD,MAAF,CAASF,MAAMG,QAAf,EAAyBH,MAAMI,SAA/B,CAAX;AACAjB,sBAAM,CAAN,EAAST,SAAT,GAAqBS,MAAM,CAAN,CAArB;;AAEA,oBAAIW,MAAMxB,MAAN,GAAe,CAAnB,EAAsB;AACpB,sBAAI+B,QAAQP,MAAM,CAAN,EAAST,KAAT,CAAeD,QAAf,GAA0B,CAAtC;AACA,sBAAIvB,QAAQrE,EAAE8G,IAAF,CAAOR,MAAM,CAAN,EAASZ,SAAhB,EAA2B;AAAA,2BAAMqB,EAAE,CAAF,KAAQpB,MAAM,CAAN,IAAWkB,KAApB,IAA+BE,EAAE,CAAF,KAAQpB,MAAM,CAAN,IAAWkB,KAAvD;AAAA,mBAA3B,CAAZ;AACA,sBAAIxC,UAAU2C,SAAd,EAAyBrB,MAAM,CAAN,EAAStB,KAAT,GAAiBA,MAAM,CAAN,CAAjB;AAC1B;AACF,eAVD;;AAYFiC,oBAAM,CAAN,EAASb,GAAT,GAAeA,GAAf;AACA,qBAAOa,MAAM,CAAN,CAAP;AACD,aAhBW,EAiBXjC,KAjBW,EAAd;;AAoBA,iBAAKQ,IAAL,GAAY,KAAKQ,WAAL,CAAiB,KAAKd,MAAtB,CAAZ;AACA,iBAAKD,MAAL,CAAY,KAAKO,IAAjB;AACD;;;wCAEaoC,U,EAAY;AACxB,gBAAI1C,SAAS,IAAIpE,UAAJ,CAAe;AAC1B+G,0BAAYD,WAAWC,UADG;AAE1B1C,qBAAOyC,WAAWE;AAFQ,aAAf,CAAb;;AAKA5C,mBAAOmB,SAAP,GAAmBnB,OAAO6C,YAAP,CAAoB,KAAKlF,KAAL,CAAWd,aAA/B,CAAnB;AACA,mBAAOmD,MAAP;AACD;;;sCAEWF,K,EAAO;AACjB,mBAAOA,KAAP;AACD;;;uCAEYgD,U,EAAYC,C,EAAG;AAC1B,gBAAInC,MAAM,KAAKA,GAAf;;AAEA,iBAAKoC,OAAL,CAAaC,SAAb,CAAuB,UAAUlE,MAAV,EAAkB;AACvC,kBAAItD,EAAEyH,GAAF,CAAMnE,MAAN,EAAc,aAAd,KAAgC+D,WAAW5B,GAA/C,EAAoD;AAClDN,oBAAIuC,OAAJ,CAAYpE,OAAOqE,SAAP,EAAZ;AACArE,uBAAOsE,SAAP;AACA;AACD;AACF,aAND;AAOD;;;+BAEIC,K,EAAOC,I,EAAMC,K,EAAOC,I,EAAM;AAC7B5H,sBAAUyH,KAAV,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,IAA9B;AACD;;;;QAtL6BjI,gB;;;;AAyLhCS,iBAAWyH,WAAX,GAAyB,aAAzB","file":"satmap_ctrl.js","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\r\nimport './leaflet'\r\nimport _ from 'lodash';\r\nimport kbn from 'app/core/utils/kbn';\r\nimport core from 'app/core/core';\r\nimport TimeSeries from 'app/core/time_series';\r\nimport rendering from './rendering';\r\nimport legend from './legend';\r\nimport arrayList from './array_list';\r\nimport geohash from './geohash'\r\n\r\nexport class SatMapCtrl extends MetricsPanelCtrl {\r\n\r\n  constructor($scope, $injector, $rootScope) {\r\n    super($scope, $injector);\r\n    this.$rootScope = $rootScope;\r\n\r\n    var panelDefaults = {\r\n      legend: {\r\n        show: true, // disable/enable legend\r\n      },\r\n      links: [],\r\n      datasource: null,\r\n      maxDataPoints: 2,\r\n      interval: null,\r\n      targets: [{}],\r\n      cacheTimeout: null,\r\n      nullPointMode: 'connected',\r\n      legendOnMap: true,\r\n      aliasColors: {},\r\n      fontSize: '80%',\r\n      satTag: \"sat\",\r\n      trace: true,\r\n      thresholds: [0.2, 0.3, 0.4],\r\n      colors: ['#5b94ff', '#58ef5b', '#fff882', '#ff5b5b'],\r\n      polar: false,\r\n      polarCenter: {lat: 45.040638, lng: 41.910311},\r\n      colorize: false\r\n    };\r\n\r\n    _.defaults(this.panel, panelDefaults);\r\n    _.defaults(this.panel.legend, panelDefaults.legend);\r\n\r\n    this.events.on('render', this.onRender.bind(this));\r\n    this.events.on('data-received', this.onDataReceived.bind(this));\r\n    this.events.on('data-error', this.onDataError.bind(this));\r\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\r\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\r\n\r\n    core.appEvents.on('graph-hover', evt => {\r\n        // ignore other graph hover events if shared tooltip is disabled\r\n        if (!this.dashboard.sharedTooltipModeEnabled()) {\r\n          return;\r\n        }\r\n\r\n        // ignore if we are the emitter\r\n        if (evt.panel.id === this.panel.id || this.otherPanelInFullscreenMode() || !this.hovers) {\r\n          return;\r\n        }\r\n\r\n        this.hovers.clearLayers();\r\n        _.forEach(this.nearestPoints(evt.pos.x), p => {\r\n          var marker = L.circleMarker(p, {\r\n            radius: 2,\r\n            color: '#000',\r\n            fillOpacity: 1,\r\n          });\r\n\r\n          marker.addTo(this.hovers);\r\n        });\r\n      }\r\n    );\r\n\r\n    core.appEvents.on('graph-hover-clear', (event, info) => {\r\n        if (this.hovers) {\r\n          this.hovers.clearLayers();\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  onInitEditMode() {\r\n    this.addEditorTab('Options', 'public/plugins/satmap-panel/editor.html', 2);\r\n    this.unitFormats = kbn.getUnitFormats();\r\n  }\r\n\r\n  setUnitFormat(subItem) {\r\n    this.panel.format = subItem.value;\r\n    this.render();\r\n  }\r\n\r\n  onDataError() {\r\n    this.series = [];\r\n    this.render();\r\n  }\r\n\r\n  changeSeriesColor(series, color) {\r\n    series.color = color;\r\n    this.panel.aliasColors[series.alias] = series.color;\r\n    this.render();\r\n  }\r\n\r\n  nearestPoints(time) {\r\n    var _binSearch = (series) => {\r\n      var idx, mindiff = null;\r\n\r\n      for (idx = 0; idx < series.data.length; idx++) {\r\n          var diff = Math.abs(series.data[idx].timestamp - time);\r\n\r\n          if (mindiff === null || diff < mindiff) {\r\n              mindiff = diff;\r\n          } else {\r\n              break;\r\n          }\r\n      }\r\n\r\n      return series.data[idx];\r\n    }\r\n\r\n    return _(this.data).map(_binSearch).filter().value();\r\n}\r\n\r\n  onRender() {\r\n    this.data = this.parseSeries(this.series);\r\n  }\r\n\r\n  parseSeries(series) {\r\n    return _.map(this.series, (serie, i) => {\r\n      return {\r\n        label: serie.alias,\r\n        sat: serie.sat,\r\n        data: _(serie.flotpairs).map(point => point[1]).value(),\r\n        color: this.panel.aliasColors[serie.alias] || this.$rootScope.colors[i],\r\n        timeStep: serie.stats.timeStep || 1\r\n      };\r\n    });\r\n  }\r\n\r\n  onDataReceived(dataList) {\r\n    var satRe = new RegExp(this.panel.satTag + \"=(\\\\w+)\");\r\n\r\n    this.series = _.chain(dataList.map(this.seriesHandler.bind(this)))\r\n      .groupBy(data => _.last(data.alias.match(satRe))).map((group, sat) => {\r\n          _.first(group).flotpairs.forEach(point => {\r\n            var coord = geohash.decode_int(point[1]);\r\n            point[1] = L.latLng(coord.latitude, coord.longitude);\r\n            point[1].timestamp = point[0];\r\n\r\n            if (group.length > 1) {\r\n              var delta = group[1].stats.timeStep / 2;\r\n              var value = _.find(group[1].flotpairs, d => (d[0] >= point[0] - delta) && (d[0] <= point[0] + delta));\r\n              if (value !== undefined) point[1].value = value[1];\r\n            }\r\n          });\r\n\r\n        group[0].sat = sat;\r\n        return group[0];\r\n      })\r\n      .value()\r\n\r\n\r\n    this.data = this.parseSeries(this.series);\r\n    this.render(this.data);\r\n  }\r\n\r\n  seriesHandler(seriesData) {\r\n    var series = new TimeSeries({\r\n      datapoints: seriesData.datapoints,\r\n      alias: seriesData.target\r\n    });\r\n\r\n    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\r\n    return series;\r\n  }\r\n\r\n  formatValue(value) {\r\n    return value;\r\n  }\r\n\r\n  toggleSeries(seriesInfo, e) {\r\n    var map = this.map;\r\n\r\n    this.markers.eachLayer(function (marker) {\r\n      if (_.get(marker, 'options.sat') == seriesInfo.sat) {\r\n        map.setView(marker.getLatLng());\r\n        marker.openPopup();\r\n        return;\r\n      }\r\n    });\r\n  }\r\n\r\n  link(scope, elem, attrs, ctrl) {\r\n    rendering(scope, elem, attrs, ctrl);\r\n  }\r\n}\r\n\r\nSatMapCtrl.templateUrl = 'module.html';\r\n"]}